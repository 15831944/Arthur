<UserControl x:Class="GMCC.Sorter.Dispatcher.UserControls.Query.Battery.Index"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:utils="clr-namespace:GMCC.Sorter.Dispatcher.Utils"
             xmlns:local="clr-namespace:GMCC.Sorter.Dispatcher.UserControls.Query.Battery"
             xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
             mc:Ignorable="d" Loaded="UserControl_Loaded"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Style/Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="FontAwesome">
                <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/#FontAwesome" />
                <Setter Property="TextBlock.TextAlignment" Value="Left"></Setter>

                <!--<Setter Property="TextBlock.Foreground" Value="#09a3de"></Setter>-->
                <Setter Property="TextBlock.Margin" Value="0,0,10,0"></Setter>
                <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
                <Setter Property="TextBlock.Cursor" Value="Hand"></Setter>
                <Style.Triggers>
                    <Trigger Property="TextBlock.IsEnabled" Value="True">
                        <Setter Property="TextBlock.Foreground" Value="#09a3de"></Setter>
                    </Trigger>
                    <Trigger Property="TextBlock.IsEnabled"  Value="False">
                        <Setter Property="TextBlock.Foreground" Value="Gray"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Margin" Value="00"/>
                <Setter Property="Padding" Value="2,0,2,0"/>
                <!--<Setter Property="Foreground" Value="#09a3de"/>-->
            </Style>
            <utils:IdToStorageNameConverter x:Key="idToStorageNameConverter"/>
            <utils:IdToProcTrayCodeConverter x:Key="idToProcTrayCodeConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <DockPanel>
            <!--<TextBlock DockPanel.Dock="Top" FontSize="30" Height="35" Text="角色信息" Style="{StaticResource PageTitleTextBlock}"/>-->
            <DockPanel Margin="0,0,0,0">
                <DockPanel DockPanel.Dock="Top" Height="40">
                    <Button DockPanel.Dock="Right" Style="{DynamicResource ChamferButton}" Click="create_Click" Width="60">新增</Button>
                    <WrapPanel VerticalAlignment="Center">
                        <Label Content="时间：" VerticalAlignment="Center"/>
                        <xctk:DateTimePicker x:Name="start_time"/>
                        <Label Content="到" VerticalAlignment="Center"/>
                        <xctk:DateTimePicker x:Name="end_time" Margin="0,0,20,0"/>
                        <TextBox x:Name="queryText" Width="200" Height="28" Margin="0" VerticalContentAlignment="Center"></TextBox>
                        <Button x:Name="query" Style="{DynamicResource ChamferButton}" Click="query_Click" Margin="10,0">查询</Button>
                    </WrapPanel>
                </DockPanel>
                <DockPanel DockPanel.Dock="Bottom" Margin="0,5,0,0" Height="16" VerticalAlignment="Center">
                    <WrapPanel DockPanel.Dock="Right">
                        <Label>每页</Label>
                        <Label x:Name="size"></Label>
                        <Label>条记录 第</Label>
                        <TextBox x:Name="tbPageIndex" FontSize="8" VerticalContentAlignment="Center" MaxLength="10" PreviewTextInput="level_PreviewTextInput" input:InputMethod.IsInputMethodEnabled="False" Foreground="#09a3de"/>
                        <Label>页</Label>
                        <Button x:Name="go_page" Click="go_page_Click" Style="{DynamicResource ChamferButton}" FontSize="10" Width="25" Height="14" VerticalContentAlignment="Center" VerticalAlignment="Center">GO</Button>
                        <TextBlock x:Name="preview_page" Text="&#xf0a8;" FontSize="16" Style="{DynamicResource FontAwesome}" MouseDown="preview_page_MouseDown">
                            <TextBlock.ToolTip>
                                上一页
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock x:Name="next_page" Text="&#xf0a9;" FontSize="16" Style="{DynamicResource FontAwesome}" MouseDown="next_page_MouseDown">
                            <TextBlock.ToolTip>
                                下一页
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </WrapPanel>
                    <WrapPanel>
                        <Label>共</Label>
                        <Label x:Name="count" Foreground="#09a3de"></Label>
                        <Label>条记录 第</Label>
                        <Label x:Name="pageIndex" Foreground="#09a3de"></Label>
                        <Label>/</Label>
                        <Label x:Name="totalPages" Foreground="#09a3de"></Label>
                        <Label>页</Label>
                    </WrapPanel>
                </DockPanel>
                <DataGrid x:Name="dataGrid" AutoGenerateColumns="False"  ColumnHeaderHeight="34" SelectionUnit="FullRow" Background="Transparent" SelectionMode="Single" CanUserAddRows="False">
                    <!--数据网格的样式属性-->
                    <DataGrid.Style>
                        <!--DataGrid样式-->
                        <Style TargetType="DataGrid">
                            <!--设置HeadersVisibility：头部可见性，Column-->
                            <Setter Property="HeadersVisibility" Value="Column"/>
                            <!--水平网格线刷能见度-->
                            <Setter Property="HorizontalGridLinesBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="#333" Opacity="0.2"/>
                                </Setter.Value>
                            </Setter>

                            <!--垂直网格线刷-->
                            <Setter Property="VerticalGridLinesBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="#333" Opacity="0.2"/>
                                    <!--Transparent-->
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.Style>

                    <!--数据网格的列标题样式属性-->
                    <DataGrid.ColumnHeaderStyle>
                        <!--样式类型：DataGridColumnHeader（数据网格列标题）-->
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="Background" Value="#FF2B579A"/>
                            <Setter Property="Foreground" Value="#E1F1FF"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <!--设置边框笔刷（BorderBrush）-->
                            <Setter Property="BorderBrush">
                                <!--值-->
                                <Setter.Value>
                                    <!--色刷，Opacity：透明度-->
                                    <SolidColorBrush Color="#333" Opacity="0.2"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <!--DataGrid的Rowstyle属性（数据表格的行样式）-->
                    <DataGrid.RowStyle>
                        <!--设置样式，类型：DataGridRow（数据表格行）-->
                        <Style TargetType="DataGridRow">
                            <!--设置BorderThickness：边框粗细，value：值0-->
                            <Setter Property="BorderThickness" Value="0"/>
                            <!--<Setter Property="Background" Value="Transparent"/>Transparent：透明-->
                            <!--创建样式触发器-->
                            <Style.Triggers>
                                <!--是否是鼠标经过触发-->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!--触发：背景颜色-->
                                    <Setter Property="Background">
                                        <!--Color：背景颜色值；Opacity：透明度-->
                                        <Setter.Value>
                                            <SolidColorBrush Color="#E1F1FF" Opacity="1"></SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <!--是否选中时触发-->
                                <Trigger Property="IsSelected" Value="True">
                                    <!--触发：Foreground（字体颜色）；Value：颜色值：Red-->
                                    <Setter Property="Foreground" Value="Red"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <!--DataGrid的CellStyle属性（数据表格的单元格样式）-->
                    <DataGrid.CellStyle >
                        <!--设置样式，类型：DataGridCell（数据表格的单元格）-->
                        <Style TargetType="DataGridCell">
                            <!--设置BorderThickness：边框粗细，value：值0-->
                            <Setter Property="BorderThickness" Value="0"/>
                            <!--样式的触发器-->
                            <Style.Triggers>
                                <!--是否选中是触发-->
                                <Trigger Property="IsSelected" Value="True">
                                    <!--触发：背景-->
                                    <Setter Property="Background">
                                        <!--设置触发背景的值-->
                                        <Setter.Value>
                                            <!--Color：颜色，Opacity：透明度-->
                                            <SolidColorBrush Color="AntiqueWhite" Opacity="0.9"/>
                                        </Setter.Value>
                                    </Setter>
                                    <!--设置字体颜色（Foreground）：红色（Red）-->
                                    <Setter Property="Foreground" Value="Red"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>

                        <DataGridTemplateColumn Header="条码" Width="2*"  CanUserSort="True" SortMemberPath="Code">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Code}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="绑定托盘" Width="*"  CanUserSort="True" SortMemberPath="ProcTrayId">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding ProcTrayId, Converter={StaticResource idToProcTrayCodeConverter}}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="位置" Width="*" CanUserSort="True" SortMemberPath="Pos">
                            <!--数据表格模板列的单元格模板属性-->
                            <DataGridTemplateColumn.CellTemplate>
                                <!--数据模板-->
                                <DataTemplate>
                                    <!--堆叠盘-->
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Pos}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="静置料仓" Width="*"  CanUserSort="True" SortMemberPath="StorageId">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding StorageId, Converter={StaticResource idToStorageNameConverter}}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="开始静置时间" Width="2*"  CanUserSort="True" SortMemberPath="StartStillTime">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding StartStillTime, StringFormat={}{0:yyyy-MM-dd HH:mm}}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="静置时长(min)" Width="*"  CanUserSort="True" SortMemberPath="StillTimeSpan">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding StillTimeSpan}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="扫码时间" Width="2*"  CanUserSort="True" SortMemberPath="ScanTime">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding ScanTime, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn Header="操作" Width="2*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="25">
                                        <!--框-->

                                        <Border VerticalAlignment="Center" Margin="3,0">
                                            <TextBlock x:Name="details" Text="&#xf15c;" Style="{DynamicResource FontAwesome}" FontSize="16" MouseDown="details_MouseDown"  Tag="{Binding Id}" Cursor="Hand"/>
                                        </Border>

                                        <Border VerticalAlignment="Center" Margin="3,0">
                                            <TextBlock x:Name="edit" Text="&#xf044;" Style="{DynamicResource FontAwesome}" FontSize="18" MouseDown="edit_MouseDown"  Tag="{Binding Id}" Cursor="Hand"/>
                                        </Border>

                                        <Border VerticalAlignment="Center" Margin="3,0">
                                            <TextBlock x:Name="delete" Text="&#xf1f8;" Style="{DynamicResource FontAwesome}" FontSize="18" MouseDown="delete_MouseDown"  Tag="{Binding Id}" Cursor="Hand"/>
                                        </Border>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </DockPanel>
    </Grid>
</UserControl>
