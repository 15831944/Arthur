<Window x:Class="GMCC.Sorter.Dispatcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GMCC.Sorter.Dispatcher"
        WindowState="Maximized"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen" Closing="Window_Closing"
        Title="{Binding AppTitle}" Height="450" Width="800">
    <Window.Resources>

        <!--<utils:AppNameToTitleConverter x:Key="appNameToTitleConverter"/>-->

        <Style x:Key="FontAwesome">
            <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/#FontAwesome" />
            <Setter Property="TextBlock.TextAlignment" Value="Left"></Setter>
          
            <Setter Property="TextBlock.Foreground" Value="#D0D0D0"></Setter>
            <Setter Property="TextBlock.Width" Value="25"></Setter>
            <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
        </Style>


        <Style TargetType="{x:Type Expander}">
            <Setter Property="TextBlock.FontSize" Value="24"></Setter>
            <Setter Property="Foreground" Value="#D0D0D0"></Setter>
            <Setter Property="Background" Value="#FF2C3B41"></Setter>
            <Setter Property="TextBlock.Background" Value="Blue"></Setter>
            <Setter Property="TextBlock.Foreground" Value="#D0D0D0"></Setter>
            <Setter Property="Margin" Value="0,0,0,0"></Setter>
            <Setter Property="TextBlock.Margin" Value="0,0,0,0"></Setter>
        </Style>

        <!--<Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="#D0D0D0"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="Margin" Value="20,0,0,0"></Setter>
        </Style>-->


        <LinearGradientBrush x:Key="CheckRadioFillNormal">
            <GradientStop Color="#FFD2D4D2" Offset="0"/>
            <GradientStop Color="#FFFFFFFF" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="CheckRadioStrokeNormal">
            <GradientStop Color="#FF004C94" Offset="0"/>
            <GradientStop Color="#FF003C74" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="Foreground" Value="#D0D0D0"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="Margin" Value="20,0,0,0"></Setter>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <!--<Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}"/>-->
            <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <!--背景颜色 透明度 边框弧度-->
                            <!--<Rectangle x:Name="rectangle" Fill="LightGray" Stroke="Black" Opacity="1" RadiusX="0" RadiusY="0" StrokeThickness="0"/>-->
                            <!--字体颜色, 字体大小-->
                            <TextBlock x:Name="textBlock" Margin="8,0" Text="{TemplateBinding Content}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--鼠标点击触发器, 背景颜色-->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                <Setter Property="Foreground" TargetName="textBlock">
                                    <Setter.Value>
                                        <LinearGradientBrush>
                                            <!--鼠标点击触发器, 修改字体颜色-->
                                            <GradientStop Color="#FFFFFF" Offset="0"/>
                                            <GradientStop Color="#FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="FontWeight" Value="Normal"></Setter>
                                <Setter Property="Foreground" TargetName="textBlock">
                                    <Setter.Value>
                                        <LinearGradientBrush>
                                            <!--鼠标点击触发器, 修改字体颜色-->
                                            <GradientStop Color="#FFFFFF" Offset="0"/>
                                            <GradientStop Color="#FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            
                            <!--鼠标移入移出触发器--><!--
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Effect" TargetName="rectangle" Value="{x:Null}"/>
                                <Setter Property="Fill" TargetName="rectangle" Value="#AAAAAA"/>
                            </Trigger>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                                <Setter Property="Padding" Value="2,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel" Height="30" HorizontalAlignment="Left" Background="Transparent" Grid.Column="0" IsItemsHost="True" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Line X1="0" X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" Stroke="Gray" StrokeThickness="0.1" VerticalAlignment="Bottom" Margin="0 0 0 1" SnapsToDevicePixels="True"/>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot"  SnapsToDevicePixels="True" Background="Transparent">
                            <Border x:Name="_underline" BorderBrush="#37aefe" BorderThickness="0" Margin="{TemplateBinding Margin}"/>
                            <Grid>
                                <TextBlock x:Name="txt" Visibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Header}" ToolTip="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" TextTrimming="CharacterEllipsis" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Foreground" TargetName="txt" Value="#37aefe"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Foreground" TargetName="txt" Value="#37aefe"/>
                                <Setter Property="BorderThickness" TargetName="_underline" Value="0 0 0 2"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type local:ButtonEx}">
            <Style.Triggers>
                <Trigger Property="ButtonType" Value="Normal">
                    <Setter Property="Background" Value="#43a9c7"/>
                    <Setter Property="MouseOverBackground" Value="#2f96b4"/>
                    <Setter Property="MousePressedBackground" Value="#2a89a4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="MouseOverForeground" Value="White"/>
                    <Setter Property="MousePressedForeground" Value="White"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:ButtonEx}">
                                <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True">
                                    <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{Binding MouseOverBackground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter TargetName="txt" Property="Foreground" Value="{Binding MouseOverForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter TargetName="border" Property="BorderBrush" Value="{Binding MouseOverBorderbrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{Binding MousePressedBackground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter TargetName="txt" Property="Foreground" Value="{Binding MousePressedForeground,RelativeSource={RelativeSource TemplatedParent}}"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ButtonType" Value="Icon">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:ButtonEx}">
                                <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                    <Image x:Name="Img" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{TemplateBinding Icon}" Stretch="None"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="0.8"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Opacity" Value="0.9"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ButtonType" Value="Text">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="#002c99"/>
                    <Setter Property="MouseOverForeground" Value="#FF2c99"/>
                    <Setter Property="MousePressedForeground" Value="#002c99"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:ButtonEx}">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{Binding MouseOverForeground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="txt"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="{Binding MousePressedForeground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="txt"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ButtonType" Value="IconText">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="#555"/>
                    <Setter Property="MouseOverForeground" Value="#555"/>
                    <Setter Property="MousePressedForeground" Value="#555"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:ButtonEx}">
                                <Border>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Image Source="{TemplateBinding Icon}" Stretch="None"/>
                                        <TextBlock x:Name="Txt" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{Binding MouseOverForeground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="Txt"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="{Binding MousePressedForeground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="Txt"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="{x:Type local:TabItemClose}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="Padding" Value="0 0 0 0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CloseIcon" Value="/Images/close.png"/>
            <!--TextBlock Text="&#xf00d;" Style="{DynamicResource FontAwesome}"-->

            <Setter Property="NormalBackground" Value="#ca5100"/>
            <Setter Property="OverBackgound" Value="#33ca5100"/>
            <Setter Property="SelectedBackgound" Value="WhiteSmoke"/>

            <Setter Property="NormalForeground" Value="White"/>
            <Setter Property="OverForeground" Value="White"/>
            <Setter Property="SelectedForeground" Value="#555558"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:TabItemClose}">
                        <Border x:Name="_bordertop"   Width="{TemplateBinding Width}" MaxWidth="{TemplateBinding MaxWidth}" Height="{TemplateBinding Height}" CornerRadius="{TemplateBinding CornerRadius}"  Background="{TemplateBinding NormalBackground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ToolTip="{TemplateBinding Header}"  >
                            <DockPanel>
                                <Image x:Name="_logo" DockPanel.Dock="Left" Visibility="Visible" Margin="{TemplateBinding LogoPadding}" Source="{TemplateBinding LogoIcon}" VerticalAlignment="Center"  HorizontalAlignment="Center" Stretch="Uniform" Width="{TemplateBinding LogoIconWidth}" Height="{TemplateBinding LogoIconHeigth}" />
                                <Grid Name="_grid" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition x:Name="_col_close" Width="20" />
                                        <ColumnDefinition Width="1" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.ColumnSpan="2" Background="White" Opacity="0"/>
                                    <TextBlock   x:Name="_txt" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"  Margin="3 0 3 0"   Foreground="{TemplateBinding NormalForeground}" TextAlignment="Center" HorizontalAlignment="Center"   Text="{TemplateBinding Header}"  />
                                    <Grid x:Name="_gridclose" Grid.Column="1"  >
                                        <Border x:Name="_borderbg" Background="Black" Opacity="0" />

                                        <!--Icon="{TemplateBinding CloseIcon}"  ButtonType="Icon"-->
                                        <local:ButtonEx x:Name="PART_Close_TabItem" HorizontalAlignment="Center"  VerticalAlignment="Center" Background="Transparent" Visibility="Visible" Icon="{TemplateBinding CloseIcon}"  ButtonType="Icon">
                                        </local:ButtonEx>
                                    </Grid>
                                    <Canvas Background="Blue"  Grid.Column="2"/>
                                </Grid>
                            </DockPanel>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="LogoIcon" Value="{x:Null}">
                                <Setter TargetName="_logo" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsCanClose" Value="false">
                                <Setter TargetName="_gridclose" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="_col_close" Property="Width" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="_bordertop" Property="Background" Value="{Binding SelectedBackgound,RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter TargetName="_txt"  Property="Foreground" Value="{Binding SelectedForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="IsSelected" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="_txt"  Property="Foreground" Value="{Binding OverForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter TargetName="_bordertop"  Property="Background" Value="{Binding OverBackgound,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Grid>
        <DockPanel>
            <DockPanel DockPanel.Dock="Top" Background="#FF2B579A" Height="80">
                <TextBlock VerticalAlignment="Bottom" Foreground="White" DockPanel.Dock="Right" Margin="0,0,10,5">
                    欢迎你，<Hyperlink x:Name="currentUser" Click="currentUser_Click"><TextBlock Text="{Binding UserName}" Foreground="White" FontStyle="Italic" TextDecorations="Underline"/></Hyperlink></TextBlock>
                <Label Content="{Binding AppName}" FontSize="30" Foreground="White" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0,0,0"/>
            </DockPanel>

            <StackPanel x:Name="nav_bar" DockPanel.Dock="Left"  Width="200" Background="#FF222D32">

                <Expander VerticalAlignment="Stretch" ExpandDirection="Down">
                    <Expander.Header>
                        <!--TextBlock Text="&#xf00d;" Style="{DynamicResource FontAwesome}"-->
                        <WrapPanel>
                            <TextBlock Text="&#xf2bb;" Style="{DynamicResource FontAwesome}" FontSize="18"/>
                            <TextBlock Text="用户管理"/>
                        </WrapPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <RadioButton Grid.Row="0" Checked="RadioButton_Checked">个人中心</RadioButton>
                            <RadioButton Grid.Row="1" Checked="RadioButton_Checked">用户管理</RadioButton>
                            <RadioButton Grid.Row="2" Checked="RadioButton_Checked">角色管理</RadioButton>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Separator Height="2" Background="White"/>

                <Expander VerticalAlignment="Stretch" ExpandDirection="Down">
                    <Expander.Header>
                        <WrapPanel>
                            <TextBlock Text="&#xf108;" Style="{DynamicResource FontAwesome}" FontSize="18"/>
                            <TextBlock Text="系统"/>
                        </WrapPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <RadioButton Grid.Row="0" Checked="RadioButton_Checked">系统参数</RadioButton>
                            <RadioButton Grid.Row="1" Checked="RadioButton_Checked">系统事件</RadioButton>
                            <RadioButton Grid.Row="2" Checked="RadioButton_Checked">系统日志</RadioButton>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Separator Height="2" Background="White"/>

                <Expander VerticalAlignment="Stretch" ExpandDirection="Down">
                    <Expander.Header>
                        <WrapPanel>
                            <TextBlock Text="&#xf013;" Style="{DynamicResource FontAwesome}" FontSize="22"/>
                            <TextBlock Text="设置"/>
                        </WrapPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <RadioButton Grid.Row="0" Checked="RadioButton_Checked">配置</RadioButton>

                        </Grid>
                    </Expander.Content>
                </Expander>
                <Separator Height="2" Background="White"/>

                <Expander VerticalAlignment="Stretch" ExpandDirection="Down">
                    <Expander.Header>
                        <WrapPanel>
                            <TextBlock Text="&#xf085;" Style="{DynamicResource FontAwesome}" FontSize="18"/>
                            <TextBlock Text="设备管理"/>
                        </WrapPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <RadioButton Grid.Row="0" Checked="RadioButton_Checked">PLC</RadioButton>
                            <RadioButton Grid.Row="1" Checked="RadioButton_Checked">电池扫码枪</RadioButton>
                            <RadioButton Grid.Row="2" Checked="RadioButton_Checked">托盘扫码枪</RadioButton>
                            <RadioButton Grid.Row="3" Checked="RadioButton_Checked">托盘管理</RadioButton>
                            <RadioButton Grid.Row="4" Checked="RadioButton_Checked">料仓管理</RadioButton>

                        </Grid>
                    </Expander.Content>
                </Expander>
                <Separator Height="2" Background="White"/>

                <Expander VerticalAlignment="Stretch" ExpandDirection="Down">
                    <Expander.Header>
                        <WrapPanel>
                            <TextBlock Text="&#xf25a;" Style="{DynamicResource FontAwesome}" FontSize="20"/>
                            <TextBlock Text="手动调试"/>
                        </WrapPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <RadioButton Grid.Row="0" Checked="RadioButton_Checked">PLC调试</RadioButton>
                            <RadioButton Grid.Row="1" Checked="RadioButton_Checked">扫码枪调试</RadioButton>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Separator Height="2" Background="White"/>

                <Expander VerticalAlignment="Stretch" ExpandDirection="Down">
                    <Expander.Header>
                        <WrapPanel>
                            <TextBlock Text="&#xf002;" Style="{DynamicResource FontAwesome}" FontSize="20"/>
                            <TextBlock Text="数据查询"/>
                        </WrapPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <!--<RadioButton Grid.Row="0">基本数据</RadioButton>
                            <RadioButton Grid.Row="1">静置数据</RadioButton>
                            <RadioButton Grid.Row="2">OCV数据</RadioButton>
                            <RadioButton Grid.Row="3">化成数据</RadioButton>
                            <RadioButton Grid.Row="4">分容数据</RadioButton>

                            <RadioButton Grid.Row="5">DCIR数据</RadioButton>
                            <RadioButton Grid.Row="6">高速缓存</RadioButton>-->
                            <RadioButton Grid.Row="0" Checked="RadioButton_Checked">托盘追溯</RadioButton>
                            <RadioButton Grid.Row="1" Checked="RadioButton_Checked">电池追溯</RadioButton>
                            <RadioButton Grid.Row="2" Checked="RadioButton_Checked">任务日志</RadioButton>
                        </Grid>
                    </Expander.Content>
                </Expander>

                <Separator Height="2" Background="White"/>

                <Expander VerticalAlignment="Stretch" ExpandDirection="Down" HorizontalContentAlignment="Left" SnapsToDevicePixels="True">
                    <Expander.Header>
                        <WrapPanel>
                            <TextBlock Text="&#xf0ee;" Style="{DynamicResource FontAwesome}" FontSize="18"/>
                            <TextBlock Text="交互平台"/>
                        </WrapPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <RadioButton Grid.Row="0" Checked="RadioButton_Checked">BTS客户端</RadioButton>
                            <RadioButton Grid.Row="1" Checked="RadioButton_Checked">MES</RadioButton>
                        </Grid>
                    </Expander.Content>
                </Expander>

                <Separator Height="2" Background="White"/>

                <Expander VerticalAlignment="Stretch" ExpandDirection="Down" HorizontalContentAlignment="Left" SnapsToDevicePixels="True">
                    <Expander.Header>
                        <WrapPanel>
                            <TextBlock Text="&#xf059;" Style="{DynamicResource FontAwesome}" FontSize="20"/>
                            <TextBlock Text="帮助"/>
                        </WrapPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <RadioButton Grid.Row="0">帮助</RadioButton>
                            <RadioButton Grid.Row="1" Checked="RadioButton_Checked">关于</RadioButton>
                        </Grid>
                    </Expander.Content>
                </Expander>
            </StackPanel>
            <Grid>
                <DockPanel>
                    <Canvas DockPanel.Dock="Left" Width="5" Background="#FF2B579A"/>
                    <Canvas DockPanel.Dock="Right" Width="5" Background="#FF2B579A"/>
                    <Canvas DockPanel.Dock="Bottom" Height="5" Background="#FF2B579A"/>
                    <Grid Background="#858586">
                        <TabControl x:Name="tabControl"  Foreground="Black" Background="#FFECF0F5" BorderBrush="Transparent" BorderThickness="0" SelectionChanged="tabControl_SelectionChanged">
                            <local:TabItemClose Header="主界面" Height="30"  Width="100" IsCanClose="False">
                                <Grid x:Name="grid_mainview">
                                    <Grid.Background>
                                        <ImageBrush ImageSource="pack://application:,,,/Images/Character.jpg" Opacity="0.2"></ImageBrush>
                                    </Grid.Background>
                                </Grid>
                            </local:TabItemClose>
                            <!--Background="#FFECF0F5"-->
                            <!--<local:TabItemClose  Cursor="Hand" Header="Mv电台" Height="30" Width="100">
                                <Grid Background="#aaffffff">
                                    <TextBlock Text="Mv电台" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </local:TabItemClose>-->
                        </TabControl>
                    </Grid>
                </DockPanel>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
